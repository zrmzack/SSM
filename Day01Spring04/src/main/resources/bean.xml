<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--对象创建交给Spring管理-->
    <!--spring对bean得管理细节
    创建bean得三种方式
    bean对象得作用范围
    bean对象的生命周期
    -->
    <!-- 创建bean得三种方式-->
    <!--使用默认构造函数创建
    在spring配置文件中使用bean标签，配以id和class属性之后，且没有其他属性和标签得时候，
    采用就是默认构造函数创建bean对象，此时如果类中没有默认构造函数，则对象无法创建
    -->
    <!-- <bean id="accountService" class="com.itheima.service.impl.AccountServiceImpl"></bean>-->

    <!--使用普通工厂得方法创建对象（使用某个类中得方法创建对象，并且存入spring）-->
    <!--   <bean id="instanceFactory" class="com.itheima.factory.InstanceFactory"></bean>
       <bean id="accountService" factory-bean="instanceFactory" factory-method="getAccountService"></bean>

   -->


    <!--使用工厂中的静态方法创建对象（使用某个类的静态方法）-->
    <!--<bean id="accountService" scope="singleton" class="com.itheima.factory.StaticFactory"-->
          <!--factory-method="getAccountService"></bean>-->

    <!--bean得作用范围调整
    bean标签得scope属性：
    作用：用于指定bean得作用范围
    取值：
    singleton:单例
    prototype:多例
    request:作用域web应用得请求范围
    session：作用域web应用得会话范围
    global-session：作用域集群范围得会话范围
    -->
    <!--bean的生命周期
    单例对象
    出生：容器创建对象出生
    或者：容器存在对象存在
    死亡：容器死亡对象死亡


    -->
    <bean id="accountService" class="com.itheima.service.impl.AccountServiceImpl" scope="singleton" init-method="init"
          destroy-method="destory"></bean>

</beans>